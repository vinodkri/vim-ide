snippet foridx "Description" b
	for (idx = 0; idx < $1; ++idx)
	{
		$0
	}
endsnippet

snippet for "Description" b
	for ($1 = 0; $1 < $2; ++$1)
	{
		$0
	}
endsnippet

snippet forvs "Description" b
	for ($1 = 0; $1 < $2; ++$1)
	{
		$0${VISUAL}
	}
endsnippet

snippet if "Description" b
	if ($1)
	{
		$0
	}
endsnippet

snippet ifeq "Description" b
	if ($1 == $2)
	{
		$0
	}
endsnippet

snippet ifneq "Description" b
	if ($1 != $2)
	{
		$0
	}
endsnippet

snippet ifnulleq "Description" b
	if (NULL == $1)
	{
		$0
	}
endsnippet

snippet ifnullneq "Description" b
	if (NULL != $1)
	{
		$0
	}
endsnippet

snippet and "Description"
	($1 && $2)
endsnippet

snippet or "Description"
	($1 || $2)
endsnippet

snippet lt "Description"
	($1 < $2)
endsnippet

snippet lteq "Description"
	($1 <= $2)
endsnippet

snippet gt "Description"
	($1 > $2)
endsnippet

snippet gteq "Description"
	($1 >= $2)
endsnippet

snippet prt "description" b
printf("$1\n"$2);$0
endsnippet

global !p
def complete(t, opts):
	if t:
		opts = [ m[len(t):] for m in opts if m.startswith(t) ]
	if len(opts) == 1:
		return opts[0]
	return '(' + '|'.join(opts) + ')'
endglobal

snippet fapilog "description" b
FAPI_LOG($1`!p snip.rv=complete(t[1], ['INFO_LOG', 'DEBUG_LOG', 'ERROR_LOG', 'TRACE_LOG'])`, ("[$2`!p snip.rv=complete(t[2], ['FAPI_INT', 'IA_FAPI', 'FAPI WLS'])`] $3",$4));$0
endsnippet


